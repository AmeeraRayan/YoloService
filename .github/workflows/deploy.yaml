name: YoloService Deploy Prod

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
    secrets:
      SSH_PRIVATE_KEY:
        required: true
      EC2_HOST:
        required: true
      EC2_USERNAME:
        required: true

env:
  REPO_URL: ${{ github.server_url }}/${{ github.repository }}.git
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  Deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/private_key
          chmod 600 ~/.ssh/private_key
          cat > ~/.ssh/config << EOF
          Host ec2
            HostName $EC2_HOST
            User $EC2_USERNAME
            IdentityFile ~/.ssh/private_key
            StrictHostKeyChecking no
          EOF

      - name: Copy repo to EC2
        run: |
          ssh ec2 "
            if [ -d ~/${REPO_NAME} ]; then
              cd ~/${REPO_NAME}
              git reset --hard HEAD
              git clean -fd
              git pull
            else
              git clone ${REPO_URL} ~/${REPO_NAME}
            fi
          "
          scp docker-compose.prod.yaml ec2:~/${REPO_NAME}/docker-compose.prod.yaml

      - name: Deploy with Docker Compose
        env:
          IMG_NAME: ${{ inputs.image }}
        run: |
          ssh ec2 "
            cd ~/${REPO_NAME}
            cat > .env <<EOF
              IMG_NAME=${{ inputs.image }}
            EOF
            docker compose -f docker-compose.prod.yaml down || true
            docker compose -f docker-compose.prod.yaml pull
            docker compose -f docker-compose.prod.yaml up -d
          "